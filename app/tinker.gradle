apply plugin: 'com.android.application'
apply plugin: 'tinkerpatch-support'

tinkerpatchSupport {
    tinkerEnable = true
    //为便于与无平台接入方案对比，此参数设为false，如果是已成型项目接入，建议使用true，这样能减轻重写Application类带来的‘压力’
    reflectApplication = false
    protectedApp = false
    supportComponent = true
    appVersion rootProject.appVersion
    appKey = "your appkey"
}
tinkerPatch {
    tinkerEnable = true
    ignoreWarning = true
    //oldApk，在task（tinkerProcess${variant.name.capitalize()}Config）中按照渠道设置
//    oldApk "${bakPath}/${oldApkName}"
    buildConfig {
        //两个mapping文件，在task（tinkerProcess${variant.name.capitalize()}Config）中按照渠道设置
//        applyMapping "${rootProject.bakPath}/${rootProject.mappingName}"
//        applyResourceMapping "${rootProject.bakPath}/${rootProject.RMappingName}"
        tinkerId rootProject.appVersion
        keepDexApply false
        isProtectedApp false
        supportHotplugComponent true
    }
    dex {
        dexMode "jar"
        loader = ["com.tencent.tinker.loader.*"]
        pattern = ["classes*.dex",
                   "assets/secondary-dex-?.jar"]
    }
    lib {
        pattern = ["lib/*/*.so"]
    }
    res { pattern = ["res/*", "assets/*", "resources.arsc", "AndroidManifest.xml"] }
    packageConfig {}
    sevenZip {
        zipArtifact = "com.tencent.mm:SevenZip:1.1.10"
    }
}

dependencies {
    compileOnly("com.tencent.tinker:tinker-android-anno:$rootProject.tinkerLibVersion")
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:$rootProject.tinkerPatchLibVersion")
}

android.applicationVariants.all { variant ->
    project.afterEvaluate {
        task("tinkerProcess${variant.name.capitalize()}Config") {
            group = "tinker"
            def tinkerTask = tasks.getByName("tinkerPatch${variant.name.capitalize()}")
            dependsOn tinkerTask
            def preAssembleTask = tasks.getByName("process${variant.name.capitalize()}Manifest")
            preAssembleTask.doFirst {
                project.tinkerPatch.oldApk = "${rootProject.bakPath}/${variant.dirName}/${rootProject.oldApkName}"
                project.tinkerPatch.buildConfig.applyMapping = "${rootProject.bakPath}/${variant.dirName}/${rootProject.mappingName}"
                project.tinkerPatch.buildConfig.applyResourceMapping = "${rootProject.bakPath}/${variant.dirName}/${rootProject.RMappingName}"
            }
        }
    }
}
